version: '3.8'

services:
  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka2
    restart: unless-stopped
    ports:
      - "9092:9092"   # container içi (PLAINTEXT) - diğer container'lar için
      - "9094:9094"   # host'tan erişim (EXTERNAL)
    environment:
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_NODE_ID: "1"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_NUM_PARTITIONS: "3"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"

      CLUSTER_ID: "5L6g3nShT-eMCtK--X86sw"
      KAFKA_CLUSTER_ID: "5L6g3nShT-eMCtK--X86sw"

      KAFKA_LOG_DIRS: "/var/lib/kafka/data"

    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafkanet

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui2
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8079:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    networks:
      - kafkanet

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  loki:
    image: grafana/loki:3.0.0
    container_name: loki3
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana3
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
    volumes:
      - ./logstash/config:/usr/share/logstash/pipeline
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    depends_on:
      elasticsearch:
        condition: service_healthy
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - kibana_data:/usr/share/kibana/data
volumes:
  kafka-data:
  loki_data: { }
  grafana_data: { }
  elasticsearch_data: { }
  kibana_data: { }

networks:
  kafkanet:
