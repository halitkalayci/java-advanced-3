spring:
  application:
    name: order-service
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    url: jdbc:h2:file:C:/Users/PC1/order-3-db;
    username: sa
    password:
  kafka:
    bootstrap-servers: localhost:9094
  cloud:
    openfeign:
      circuitbreaker:
        enabled: false
      httpclient:
        connection-timeout: 2000
        ok-http:
          read-timeout: 60s
    function:
      definition: orderCreated;stockDecreaseFailed
    stream:
      bindings:
        orderCreated-out-0:
          destination: orders
          content-type: application/json
        stockDecreaseFailed-in-0:
          destination: products
          content-type: application/json
          group: order-service
      kafka:
        bindings:
          orderCreated-out-0:
            producer:
              sync: true # Mesaj g�nderim i?leminin senkron olmas?n? sa?lar. Kafka ok-error verene kadar bekle.
              configuration:
                enable.idempotence: true
                acks: all # T�m kopyalardan onay bekle.
server:
  port: 8081

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

# Bazı versiyonlar..


resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 20
        failure-rate-threshold: 50
        minimum-number-of-calls: 10
        wait-duration-in-open-state: 15s
        permitted-number-of-calls-in-half-open-state: 5
        record-exceptions:
          - feign.RetryableException
          - feign.FeignException
          - java.net.SocketException
    instances:
      product-service:
        base-config: default
  retry:
    instances:
      product-service:
        max-attempts: 3
        wait-duration: 300ms
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2.0
        retry-exceptions:
          - feign.RetryableException
          - java.net.SocketException
  timelimiter:
    instances:
      product-service:
        timeout-duration: 4s
        cancel-running-future: true


